
name: Test & Linters

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get poetry
        uses: abatilo/actions-poetry@v2.0.0

      - name: Load cache
        id: valid-cache
        uses: actions/cache@v2
        with:
          key: poetry-${{ hashFiles('poetry.lock') }}
          path: |
            ${{ github.workspace }}/.venv
            ${{ github.workspace }}/requirements.txt
      - name: Install dependencies
        if: steps.valid-cache.outputs.cache-hit != 'true'
        run: |
          python3 -m venv .venv
          poetry install
          poetry export --without-hashes -f requirements.txt > src/requirements.txt

  linters:
      name: Linting
      needs: build
      runs-on: ubuntu-latest
      strategy:
        matrix:
          python-version: [3.11]

      steps:
        - name: Clone repository
          uses: actions/checkout@v2

        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version }}

        - name: Get poetry
          uses: abatilo/actions-poetry@v2.0.0

        - name: Load cache
          id: valid-cache
          uses: actions/cache@v2
          with:
            key: poetry-${{ hashFiles('poetry.lock') }}
            path: |
              ${{ github.workspace }}/.venv
              ${{ github.workspace }}/requirements.txt
        - name: Run Isort
          run: |
            poetry run isort --profile "black" --check src tests
        - name: Run Flake8
          run: |
            poetry run flake8 src tests
        - name: Run Black
          run: |
            poetry run black --check src tests

  tests:
    name: Tests
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
    env:
      PYTHONPATH: src/
      SHA: ${{ github.sha }}
      COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get poetry
        uses: abatilo/actions-poetry@v2.0.0

      - name: Load cache
        id: valid-cache
        uses: actions/cache@v2
        with:
          key: poetry-${{ hashFiles('poetry.lock') }}
          path: |
            ${{ github.workspace }}/.venv
            ${{ github.workspace }}/requirements.txt
      - name: Run tests
        run: |
          poetry run pytest -v

      - name: Coveralls submit
        run: |
          poetry run coveralls --service=github
